/*
 * This file is generated by jOOQ.
 */
package com.apon.elitefour.database.tables;


import com.apon.elitefour.database.Indexes;
import com.apon.elitefour.database.Keys;
import com.apon.elitefour.database.Public;
import com.apon.elitefour.database.tables.records.ListItemEliminatedRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.processing.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListItemEliminated extends TableImpl<ListItemEliminatedRecord> {

    private static final long serialVersionUID = -872466602;

    /**
     * The reference instance of <code>public.list_item_eliminated</code>
     */
    public static final ListItemEliminated LIST_ITEM_ELIMINATED = new ListItemEliminated();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ListItemEliminatedRecord> getRecordType() {
        return ListItemEliminatedRecord.class;
    }

    /**
     * The column <code>public.list_item_eliminated.item_id</code>.
     */
    public final TableField<ListItemEliminatedRecord, Integer> ITEM_ID = createField(DSL.name("item_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.list_item_eliminated.eliminated_item_id</code>.
     */
    public final TableField<ListItemEliminatedRecord, Integer> ELIMINATED_ITEM_ID = createField(DSL.name("eliminated_item_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.list_item_eliminated</code> table reference
     */
    public ListItemEliminated() {
        this(DSL.name("list_item_eliminated"), null);
    }

    /**
     * Create an aliased <code>public.list_item_eliminated</code> table reference
     */
    public ListItemEliminated(String alias) {
        this(DSL.name(alias), LIST_ITEM_ELIMINATED);
    }

    /**
     * Create an aliased <code>public.list_item_eliminated</code> table reference
     */
    public ListItemEliminated(Name alias) {
        this(alias, LIST_ITEM_ELIMINATED);
    }

    private ListItemEliminated(Name alias, Table<ListItemEliminatedRecord> aliased) {
        this(alias, aliased, null);
    }

    private ListItemEliminated(Name alias, Table<ListItemEliminatedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ListItemEliminated(Table<O> child, ForeignKey<O, ListItemEliminatedRecord> key) {
        super(child, key, LIST_ITEM_ELIMINATED);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LIST_ITEM_ELIMINATED_PKEY);
    }

    @Override
    public UniqueKey<ListItemEliminatedRecord> getPrimaryKey() {
        return Keys.LIST_ITEM_ELIMINATED_PKEY;
    }

    @Override
    public List<UniqueKey<ListItemEliminatedRecord>> getKeys() {
        return Arrays.<UniqueKey<ListItemEliminatedRecord>>asList(Keys.LIST_ITEM_ELIMINATED_PKEY);
    }

    @Override
    public ListItemEliminated as(String alias) {
        return new ListItemEliminated(DSL.name(alias), this);
    }

    @Override
    public ListItemEliminated as(Name alias) {
        return new ListItemEliminated(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ListItemEliminated rename(String name) {
        return new ListItemEliminated(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ListItemEliminated rename(Name name) {
        return new ListItemEliminated(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
